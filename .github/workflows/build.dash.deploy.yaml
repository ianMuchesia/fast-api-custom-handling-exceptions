name: Build and Deploy Code

on:
  push:
    branches:
      - "main"
      - "deployment-branch"
  pull_request:
    branches:
      - "main"
      - "deployment-branch"

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: "password"
          POSTGRES_DB: "jobs"
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      # - name: Set up Docker Buildx
      #   id: buildsx
      #   uses: docker/setup-buildx-action@v1
      
      # - name: Build and push
      #   id : docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     builder: ${{ steps.buildsx.outputs.name}}
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache,dest=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache
      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }} 

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: testing
    permissions: # Required if github_deployment is set to true.
      deployments: write
    steps:
        - name: pulling git repo
          uses: actions/checkout@v3
        - uses: JorgeLNJunior/render-deploy@v1.4.3
          with:
            service_id: ${{ secrets.RENDER_SERVICE_ID }} # required
            api_key: ${{ secrets.RENDER_API_KEY }} # required
            clear_cache: false # Clear build cache. Optional
            wait_deploy: false # Wait until the deploy status is successful. Warning! Free Render services can take +5 minutes to be fully deployed. Optional
            github_deployment: true # Create a GitHub deployment. Optional
            # deployment_environment: 'production' # GitHub deployment enviroment name. Optional
            # github_token: ${{ secrets.GITHUB_TOKEN }} # Remove if github_deployment is false. Optional